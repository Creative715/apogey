<?php
namespace Aws\NetworkManager;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **AWS Network Manager** service.
 * @method Result associateCustomerGateway(array $args = [])
 * @method Promise associateCustomerGatewayAsync(array $args = [])
 * @method Result associateLink(array $args = [])
 * @method Promise associateLinkAsync(array $args = [])
 * @method Result associateTransitGatewayConnectPeer(array $args = [])
 * @method Promise associateTransitGatewayConnectPeerAsync(array $args = [])
 * @method Result createConnection(array $args = [])
 * @method Promise createConnectionAsync(array $args = [])
 * @method Result createDevice(array $args = [])
 * @method Promise createDeviceAsync(array $args = [])
 * @method Result createGlobalNetwork(array $args = [])
 * @method Promise createGlobalNetworkAsync(array $args = [])
 * @method Result createLink(array $args = [])
 * @method Promise createLinkAsync(array $args = [])
 * @method Result createSite(array $args = [])
 * @method Promise createSiteAsync(array $args = [])
 * @method Result deleteConnection(array $args = [])
 * @method Promise deleteConnectionAsync(array $args = [])
 * @method Result deleteDevice(array $args = [])
 * @method Promise deleteDeviceAsync(array $args = [])
 * @method Result deleteGlobalNetwork(array $args = [])
 * @method Promise deleteGlobalNetworkAsync(array $args = [])
 * @method Result deleteLink(array $args = [])
 * @method Promise deleteLinkAsync(array $args = [])
 * @method Result deleteSite(array $args = [])
 * @method Promise deleteSiteAsync(array $args = [])
 * @method Result deregisterTransitGateway(array $args = [])
 * @method Promise deregisterTransitGatewayAsync(array $args = [])
 * @method Result describeGlobalNetworks(array $args = [])
 * @method Promise describeGlobalNetworksAsync(array $args = [])
 * @method Result disassociateCustomerGateway(array $args = [])
 * @method Promise disassociateCustomerGatewayAsync(array $args = [])
 * @method Result disassociateLink(array $args = [])
 * @method Promise disassociateLinkAsync(array $args = [])
 * @method Result disassociateTransitGatewayConnectPeer(array $args = [])
 * @method Promise disassociateTransitGatewayConnectPeerAsync(array $args = [])
 * @method Result getConnections(array $args = [])
 * @method Promise getConnectionsAsync(array $args = [])
 * @method Result getCustomerGatewayAssociations(array $args = [])
 * @method Promise getCustomerGatewayAssociationsAsync(array $args = [])
 * @method Result getDevices(array $args = [])
 * @method Promise getDevicesAsync(array $args = [])
 * @method Result getLinkAssociations(array $args = [])
 * @method Promise getLinkAssociationsAsync(array $args = [])
 * @method Result getLinks(array $args = [])
 * @method Promise getLinksAsync(array $args = [])
 * @method Result getSites(array $args = [])
 * @method Promise getSitesAsync(array $args = [])
 * @method Result getTransitGatewayConnectPeerAssociations(array $args = [])
 * @method Promise getTransitGatewayConnectPeerAssociationsAsync(array $args = [])
 * @method Result getTransitGatewayRegistrations(array $args = [])
 * @method Promise getTransitGatewayRegistrationsAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result registerTransitGateway(array $args = [])
 * @method Promise registerTransitGatewayAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateConnection(array $args = [])
 * @method Promise updateConnectionAsync(array $args = [])
 * @method Result updateDevice(array $args = [])
 * @method Promise updateDeviceAsync(array $args = [])
 * @method Result updateGlobalNetwork(array $args = [])
 * @method Promise updateGlobalNetworkAsync(array $args = [])
 * @method Result updateLink(array $args = [])
 * @method Promise updateLinkAsync(array $args = [])
 * @method Result updateSite(array $args = [])
 * @method Promise updateSiteAsync(array $args = [])
 */
class NetworkManagerClient extends AwsClient {}
