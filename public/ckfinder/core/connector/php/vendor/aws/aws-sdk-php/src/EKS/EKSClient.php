<?php
namespace Aws\EKS;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon Elastic Container Service for Kubernetes** service.
 * @method Result associateEncryptionConfig(array $args = [])
 * @method Promise associateEncryptionConfigAsync(array $args = [])
 * @method Result associateIdentityProviderConfig(array $args = [])
 * @method Promise associateIdentityProviderConfigAsync(array $args = [])
 * @method Result createAddon(array $args = [])
 * @method Promise createAddonAsync(array $args = [])
 * @method Result createCluster(array $args = [])
 * @method Promise createClusterAsync(array $args = [])
 * @method Result createFargateProfile(array $args = [])
 * @method Promise createFargateProfileAsync(array $args = [])
 * @method Result createNodegroup(array $args = [])
 * @method Promise createNodegroupAsync(array $args = [])
 * @method Result deleteAddon(array $args = [])
 * @method Promise deleteAddonAsync(array $args = [])
 * @method Result deleteCluster(array $args = [])
 * @method Promise deleteClusterAsync(array $args = [])
 * @method Result deleteFargateProfile(array $args = [])
 * @method Promise deleteFargateProfileAsync(array $args = [])
 * @method Result deleteNodegroup(array $args = [])
 * @method Promise deleteNodegroupAsync(array $args = [])
 * @method Result describeAddon(array $args = [])
 * @method Promise describeAddonAsync(array $args = [])
 * @method Result describeAddonVersions(array $args = [])
 * @method Promise describeAddonVersionsAsync(array $args = [])
 * @method Result describeCluster(array $args = [])
 * @method Promise describeClusterAsync(array $args = [])
 * @method Result describeFargateProfile(array $args = [])
 * @method Promise describeFargateProfileAsync(array $args = [])
 * @method Result describeIdentityProviderConfig(array $args = [])
 * @method Promise describeIdentityProviderConfigAsync(array $args = [])
 * @method Result describeNodegroup(array $args = [])
 * @method Promise describeNodegroupAsync(array $args = [])
 * @method Result describeUpdate(array $args = [])
 * @method Promise describeUpdateAsync(array $args = [])
 * @method Result disassociateIdentityProviderConfig(array $args = [])
 * @method Promise disassociateIdentityProviderConfigAsync(array $args = [])
 * @method Result listAddons(array $args = [])
 * @method Promise listAddonsAsync(array $args = [])
 * @method Result listClusters(array $args = [])
 * @method Promise listClustersAsync(array $args = [])
 * @method Result listFargateProfiles(array $args = [])
 * @method Promise listFargateProfilesAsync(array $args = [])
 * @method Result listIdentityProviderConfigs(array $args = [])
 * @method Promise listIdentityProviderConfigsAsync(array $args = [])
 * @method Result listNodegroups(array $args = [])
 * @method Promise listNodegroupsAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result listUpdates(array $args = [])
 * @method Promise listUpdatesAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateAddon(array $args = [])
 * @method Promise updateAddonAsync(array $args = [])
 * @method Result updateClusterConfig(array $args = [])
 * @method Promise updateClusterConfigAsync(array $args = [])
 * @method Result updateClusterVersion(array $args = [])
 * @method Promise updateClusterVersionAsync(array $args = [])
 * @method Result updateNodegroupConfig(array $args = [])
 * @method Promise updateNodegroupConfigAsync(array $args = [])
 * @method Result updateNodegroupVersion(array $args = [])
 * @method Promise updateNodegroupVersionAsync(array $args = [])
 */
class EKSClient extends AwsClient {}
