<?php
namespace Aws\Connect;

use Aws\AwsClient;
use Aws\Result;
use GuzzleHttp\Promise\Promise;

/**
 * This client is used to interact with the **Amazon Connect Service** service.
 * @method Result associateApprovedOrigin(array $args = [])
 * @method Promise associateApprovedOriginAsync(array $args = [])
 * @method Result associateInstanceStorageConfig(array $args = [])
 * @method Promise associateInstanceStorageConfigAsync(array $args = [])
 * @method Result associateLambdaFunction(array $args = [])
 * @method Promise associateLambdaFunctionAsync(array $args = [])
 * @method Result associateLexBot(array $args = [])
 * @method Promise associateLexBotAsync(array $args = [])
 * @method Result associateQueueQuickConnects(array $args = [])
 * @method Promise associateQueueQuickConnectsAsync(array $args = [])
 * @method Result associateRoutingProfileQueues(array $args = [])
 * @method Promise associateRoutingProfileQueuesAsync(array $args = [])
 * @method Result associateSecurityKey(array $args = [])
 * @method Promise associateSecurityKeyAsync(array $args = [])
 * @method Result createContactFlow(array $args = [])
 * @method Promise createContactFlowAsync(array $args = [])
 * @method Result createInstance(array $args = [])
 * @method Promise createInstanceAsync(array $args = [])
 * @method Result createIntegrationAssociation(array $args = [])
 * @method Promise createIntegrationAssociationAsync(array $args = [])
 * @method Result createQueue(array $args = [])
 * @method Promise createQueueAsync(array $args = [])
 * @method Result createQuickConnect(array $args = [])
 * @method Promise createQuickConnectAsync(array $args = [])
 * @method Result createRoutingProfile(array $args = [])
 * @method Promise createRoutingProfileAsync(array $args = [])
 * @method Result createUseCase(array $args = [])
 * @method Promise createUseCaseAsync(array $args = [])
 * @method Result createUser(array $args = [])
 * @method Promise createUserAsync(array $args = [])
 * @method Result createUserHierarchyGroup(array $args = [])
 * @method Promise createUserHierarchyGroupAsync(array $args = [])
 * @method Result deleteInstance(array $args = [])
 * @method Promise deleteInstanceAsync(array $args = [])
 * @method Result deleteIntegrationAssociation(array $args = [])
 * @method Promise deleteIntegrationAssociationAsync(array $args = [])
 * @method Result deleteQuickConnect(array $args = [])
 * @method Promise deleteQuickConnectAsync(array $args = [])
 * @method Result deleteUseCase(array $args = [])
 * @method Promise deleteUseCaseAsync(array $args = [])
 * @method Result deleteUser(array $args = [])
 * @method Promise deleteUserAsync(array $args = [])
 * @method Result deleteUserHierarchyGroup(array $args = [])
 * @method Promise deleteUserHierarchyGroupAsync(array $args = [])
 * @method Result describeContactFlow(array $args = [])
 * @method Promise describeContactFlowAsync(array $args = [])
 * @method Result describeHoursOfOperation(array $args = [])
 * @method Promise describeHoursOfOperationAsync(array $args = [])
 * @method Result describeInstance(array $args = [])
 * @method Promise describeInstanceAsync(array $args = [])
 * @method Result describeInstanceAttribute(array $args = [])
 * @method Promise describeInstanceAttributeAsync(array $args = [])
 * @method Result describeInstanceStorageConfig(array $args = [])
 * @method Promise describeInstanceStorageConfigAsync(array $args = [])
 * @method Result describeQueue(array $args = [])
 * @method Promise describeQueueAsync(array $args = [])
 * @method Result describeQuickConnect(array $args = [])
 * @method Promise describeQuickConnectAsync(array $args = [])
 * @method Result describeRoutingProfile(array $args = [])
 * @method Promise describeRoutingProfileAsync(array $args = [])
 * @method Result describeUser(array $args = [])
 * @method Promise describeUserAsync(array $args = [])
 * @method Result describeUserHierarchyGroup(array $args = [])
 * @method Promise describeUserHierarchyGroupAsync(array $args = [])
 * @method Result describeUserHierarchyStructure(array $args = [])
 * @method Promise describeUserHierarchyStructureAsync(array $args = [])
 * @method Result disassociateApprovedOrigin(array $args = [])
 * @method Promise disassociateApprovedOriginAsync(array $args = [])
 * @method Result disassociateInstanceStorageConfig(array $args = [])
 * @method Promise disassociateInstanceStorageConfigAsync(array $args = [])
 * @method Result disassociateLambdaFunction(array $args = [])
 * @method Promise disassociateLambdaFunctionAsync(array $args = [])
 * @method Result disassociateLexBot(array $args = [])
 * @method Promise disassociateLexBotAsync(array $args = [])
 * @method Result disassociateQueueQuickConnects(array $args = [])
 * @method Promise disassociateQueueQuickConnectsAsync(array $args = [])
 * @method Result disassociateRoutingProfileQueues(array $args = [])
 * @method Promise disassociateRoutingProfileQueuesAsync(array $args = [])
 * @method Result disassociateSecurityKey(array $args = [])
 * @method Promise disassociateSecurityKeyAsync(array $args = [])
 * @method Result getContactAttributes(array $args = [])
 * @method Promise getContactAttributesAsync(array $args = [])
 * @method Result getCurrentMetricData(array $args = [])
 * @method Promise getCurrentMetricDataAsync(array $args = [])
 * @method Result getFederationToken(array $args = [])
 * @method Promise getFederationTokenAsync(array $args = [])
 * @method Result getMetricData(array $args = [])
 * @method Promise getMetricDataAsync(array $args = [])
 * @method Result listApprovedOrigins(array $args = [])
 * @method Promise listApprovedOriginsAsync(array $args = [])
 * @method Result listContactFlows(array $args = [])
 * @method Promise listContactFlowsAsync(array $args = [])
 * @method Result listHoursOfOperations(array $args = [])
 * @method Promise listHoursOfOperationsAsync(array $args = [])
 * @method Result listInstanceAttributes(array $args = [])
 * @method Promise listInstanceAttributesAsync(array $args = [])
 * @method Result listInstanceStorageConfigs(array $args = [])
 * @method Promise listInstanceStorageConfigsAsync(array $args = [])
 * @method Result listInstances(array $args = [])
 * @method Promise listInstancesAsync(array $args = [])
 * @method Result listIntegrationAssociations(array $args = [])
 * @method Promise listIntegrationAssociationsAsync(array $args = [])
 * @method Result listLambdaFunctions(array $args = [])
 * @method Promise listLambdaFunctionsAsync(array $args = [])
 * @method Result listLexBots(array $args = [])
 * @method Promise listLexBotsAsync(array $args = [])
 * @method Result listPhoneNumbers(array $args = [])
 * @method Promise listPhoneNumbersAsync(array $args = [])
 * @method Result listPrompts(array $args = [])
 * @method Promise listPromptsAsync(array $args = [])
 * @method Result listQueueQuickConnects(array $args = [])
 * @method Promise listQueueQuickConnectsAsync(array $args = [])
 * @method Result listQueues(array $args = [])
 * @method Promise listQueuesAsync(array $args = [])
 * @method Result listQuickConnects(array $args = [])
 * @method Promise listQuickConnectsAsync(array $args = [])
 * @method Result listRoutingProfileQueues(array $args = [])
 * @method Promise listRoutingProfileQueuesAsync(array $args = [])
 * @method Result listRoutingProfiles(array $args = [])
 * @method Promise listRoutingProfilesAsync(array $args = [])
 * @method Result listSecurityKeys(array $args = [])
 * @method Promise listSecurityKeysAsync(array $args = [])
 * @method Result listSecurityProfiles(array $args = [])
 * @method Promise listSecurityProfilesAsync(array $args = [])
 * @method Result listTagsForResource(array $args = [])
 * @method Promise listTagsForResourceAsync(array $args = [])
 * @method Result listUseCases(array $args = [])
 * @method Promise listUseCasesAsync(array $args = [])
 * @method Result listUserHierarchyGroups(array $args = [])
 * @method Promise listUserHierarchyGroupsAsync(array $args = [])
 * @method Result listUsers(array $args = [])
 * @method Promise listUsersAsync(array $args = [])
 * @method Result resumeContactRecording(array $args = [])
 * @method Promise resumeContactRecordingAsync(array $args = [])
 * @method Result startChatContact(array $args = [])
 * @method Promise startChatContactAsync(array $args = [])
 * @method Result startContactRecording(array $args = [])
 * @method Promise startContactRecordingAsync(array $args = [])
 * @method Result startOutboundVoiceContact(array $args = [])
 * @method Promise startOutboundVoiceContactAsync(array $args = [])
 * @method Result startTaskContact(array $args = [])
 * @method Promise startTaskContactAsync(array $args = [])
 * @method Result stopContact(array $args = [])
 * @method Promise stopContactAsync(array $args = [])
 * @method Result stopContactRecording(array $args = [])
 * @method Promise stopContactRecordingAsync(array $args = [])
 * @method Result suspendContactRecording(array $args = [])
 * @method Promise suspendContactRecordingAsync(array $args = [])
 * @method Result tagResource(array $args = [])
 * @method Promise tagResourceAsync(array $args = [])
 * @method Result untagResource(array $args = [])
 * @method Promise untagResourceAsync(array $args = [])
 * @method Result updateContactAttributes(array $args = [])
 * @method Promise updateContactAttributesAsync(array $args = [])
 * @method Result updateContactFlowContent(array $args = [])
 * @method Promise updateContactFlowContentAsync(array $args = [])
 * @method Result updateContactFlowName(array $args = [])
 * @method Promise updateContactFlowNameAsync(array $args = [])
 * @method Result updateInstanceAttribute(array $args = [])
 * @method Promise updateInstanceAttributeAsync(array $args = [])
 * @method Result updateInstanceStorageConfig(array $args = [])
 * @method Promise updateInstanceStorageConfigAsync(array $args = [])
 * @method Result updateQueueHoursOfOperation(array $args = [])
 * @method Promise updateQueueHoursOfOperationAsync(array $args = [])
 * @method Result updateQueueMaxContacts(array $args = [])
 * @method Promise updateQueueMaxContactsAsync(array $args = [])
 * @method Result updateQueueName(array $args = [])
 * @method Promise updateQueueNameAsync(array $args = [])
 * @method Result updateQueueOutboundCallerConfig(array $args = [])
 * @method Promise updateQueueOutboundCallerConfigAsync(array $args = [])
 * @method Result updateQueueStatus(array $args = [])
 * @method Promise updateQueueStatusAsync(array $args = [])
 * @method Result updateQuickConnectConfig(array $args = [])
 * @method Promise updateQuickConnectConfigAsync(array $args = [])
 * @method Result updateQuickConnectName(array $args = [])
 * @method Promise updateQuickConnectNameAsync(array $args = [])
 * @method Result updateRoutingProfileConcurrency(array $args = [])
 * @method Promise updateRoutingProfileConcurrencyAsync(array $args = [])
 * @method Result updateRoutingProfileDefaultOutboundQueue(array $args = [])
 * @method Promise updateRoutingProfileDefaultOutboundQueueAsync(array $args = [])
 * @method Result updateRoutingProfileName(array $args = [])
 * @method Promise updateRoutingProfileNameAsync(array $args = [])
 * @method Result updateRoutingProfileQueues(array $args = [])
 * @method Promise updateRoutingProfileQueuesAsync(array $args = [])
 * @method Result updateUserHierarchy(array $args = [])
 * @method Promise updateUserHierarchyAsync(array $args = [])
 * @method Result updateUserHierarchyGroupName(array $args = [])
 * @method Promise updateUserHierarchyGroupNameAsync(array $args = [])
 * @method Result updateUserHierarchyStructure(array $args = [])
 * @method Promise updateUserHierarchyStructureAsync(array $args = [])
 * @method Result updateUserIdentityInfo(array $args = [])
 * @method Promise updateUserIdentityInfoAsync(array $args = [])
 * @method Result updateUserPhoneConfig(array $args = [])
 * @method Promise updateUserPhoneConfigAsync(array $args = [])
 * @method Result updateUserRoutingProfile(array $args = [])
 * @method Promise updateUserRoutingProfileAsync(array $args = [])
 * @method Result updateUserSecurityProfiles(array $args = [])
 * @method Promise updateUserSecurityProfilesAsync(array $args = [])
 */
class ConnectClient extends AwsClient {}
